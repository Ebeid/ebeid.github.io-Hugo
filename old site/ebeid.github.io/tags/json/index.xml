<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSON on Ebeid ElSayed</title>
    <link>http://localhost:1313/tags/json/</link>
    <description>Recent content in JSON on Ebeid ElSayed</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 12 Jul 2013 17:15:00 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Started with MongoDB – Part 2</title>
      <link>http://localhost:1313/blog/2013-07-12-getting-started-with-mongodb-part-2.html/</link>
      <pubDate>Fri, 12 Jul 2013 17:15:00 -0500</pubDate>
      <guid>http://localhost:1313/blog/2013-07-12-getting-started-with-mongodb-part-2.html/</guid>
      <description>&lt;p&gt;In the previous post we explored the basics of MongoDB. In this post we&#xA;going to dig deeper in MongoDB.&lt;/p&gt;&#xA;&lt;h3 id=&#34;indexing&#34;&gt;Indexing&lt;/h3&gt;&#xA;&lt;p&gt;Whenever a new collection is created, MongoDB automatically creates an&#xA;index by the &lt;em&gt;_id&lt;/em&gt; field. These indexes can be found in the&#xA;system.indexes collection. You can show all indexes in the database&#xA;using db.system.indexes.find() . Most queries will include more fields&#xA;than just the _id, so we need to make indexes on those fields.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with MongoDB – Part 1</title>
      <link>http://localhost:1313/blog/2013-07-12-getting-started-with-mongodb-part-1.html/</link>
      <pubDate>Fri, 12 Jul 2013 13:46:00 -0500</pubDate>
      <guid>http://localhost:1313/blog/2013-07-12-getting-started-with-mongodb-part-1.html/</guid>
      <description>&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; (from &amp;ldquo;hu&lt;strong&gt;mongo&lt;/strong&gt;us&amp;rdquo;) is an open source &lt;a href=&#34;http://en.wikipedia.org/wiki/Document-oriented_database&#34;&gt;document-oriented&#xA;database&lt;/a&gt;&#xA;system developed and supported by&#xA;&lt;a href=&#34;http://www.blogger.com/www.10gen.com&#34;&gt;10gen&lt;/a&gt; (founded by &lt;a href=&#34;https://twitter.com/dmerr&#34;&gt;Dwight&#xA;Merriman&lt;/a&gt;). First publicly released in 2009,&#xA;and since then it have been a rising star in the NoSQL world. MongoDB&#xA;stores structured data as &lt;a href=&#34;http://en.wikipedia.org/wiki/JSON&#34;&gt;JSON&lt;/a&gt;-like&#xA;documents with dynamic schemas (technically data is stored in a binary&#xA;form of JSON known as &lt;a href=&#34;http://en.wikipedia.org/wiki/BSON&#34;&gt;BSON&lt;/a&gt;), making&#xA;the integration of data in certain types of applications easier and&#xA;faster.&lt;/p&gt;&#xA;&lt;h4 id=&#34;installation&#34;&gt;Installation&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Download the latest mongoDB version from&#xA;&lt;a href=&#34;http://www.mongodb.org/downloads&#34; title=&#34;downloads page&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Extract the archive to your preferred location (in my case&#xA;C:\mongodb). MongoDB is self-contained and does not have any other&#xA;system dependencies. You can run MongoDB from any folder you choose.&#xA;You may install MongoDB in any directory.&lt;/li&gt;&#xA;&lt;li&gt;MongoDB requires a data folder to store its files (default is&#xA;C:\data\db ). You may specify a different path with the dbpath&#xA;setting when lunching mongod.exe.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;starting-the-server&#34;&gt;Starting the Server&lt;/h4&gt;&#xA;&lt;p&gt;To start MongoDB, open the command prompt window, and run mongod.exe&#xA;from the bin directory (specify the data path if needed)&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:1313/img/0017.png&#34; alt=&#34;alt text&#34; title=&#34;Logo Title Text 1&#34;&gt;The&#xA;&lt;code&gt;waiting for connections&lt;/code&gt; message in the console output indicates that&#xA;the mongod.exe process is running successfully and waiting for&#xA;connections on port 27017&lt;/p&gt;</description>
    </item>
    <item>
      <title>JSON–yet another tutorial :)</title>
      <link>http://localhost:1313/blog/2011-12-01-jsonyet-another-tutorial.html/</link>
      <pubDate>Thu, 01 Dec 2011 17:43:00 -0600</pubDate>
      <guid>http://localhost:1313/blog/2011-12-01-jsonyet-another-tutorial.html/</guid>
      <description>&lt;h4 id=&#34;what-is-json&#34;&gt;What is JSON?&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://json.org/&#34;&gt;JSON&lt;/a&gt;&lt;/strong&gt; (or &lt;strong&gt;J&lt;/strong&gt;ava&lt;strong&gt;S&lt;/strong&gt;cript &lt;strong&gt;O&lt;/strong&gt;bject&#xA;&lt;strong&gt;N&lt;/strong&gt;otation) is a highly portable data interchange format. While its&#xA;structure is recognized natively by Javascript (as it &lt;em&gt;is&lt;/em&gt; Javascript),&#xA;its formatting conventions are easily recognized by other C-like&#xA;languages.&lt;/p&gt;&#xA;&lt;p&gt;JSON is built on two structures:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A collection of name/value pairs. In various languages, this is&#xA;realized as an object, record, struct, dictionary, hash table, keyed&#xA;list, or associative array. Example:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;pre&gt;&lt;code&gt;var jason = {&#xA; &amp;quot;age&amp;quot; : &amp;quot;28&amp;quot;,&#xA; &amp;quot;hometown&amp;quot; : &amp;quot;Cairo, Egypt&amp;quot;,&#xA; &amp;quot;gender&amp;quot; : &amp;quot;male&amp;quot;&#xA; };&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The object created in the example could be accessed like any other&#xA;object.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
